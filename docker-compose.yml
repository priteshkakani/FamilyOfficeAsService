
version: '3.8'
services:
  mysql:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_DATABASE: family_office
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_USER: familyuser
      MYSQL_PASSWORD: familypassword
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - SQLALCHEMY_DATABASE_URL=mysql+pymysql://familyuser:familypassword@mysql:3306/family_office
    ports:
      - "8000:8000"
    depends_on:
      mysql:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - ./logs/backend:/var/log/familyoffice

  frontend:
    build: ./frontend
    ports:
      - "3001:80"
    depends_on:
      - backend

  loki:
    image: grafana/loki:2.9.4
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - loki_data:/loki

  promtail:
    image: grafana/promtail:2.9.4
    volumes:
      - ./loki-config/promtail-config.yaml:/etc/promtail/config.yaml:ro
      - /var/log:/var/log:ro
      - ./logs/backend:/var/log/familyoffice:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/config.yaml
    depends_on:
      - loki

  grafana:
    image: grafana/grafana:10.2.3
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
    depends_on:
      - loki
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana-provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana-provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana-provisioning/dashboards:/var/lib/grafana/dashboards
    command:
      - "--config=/etc/grafana/grafana.ini"
      - "--homepath=/usr/share/grafana"
      - "--packaging=docker"

volumes:
  mysql_data:
  loki_data:
  grafana_data:
